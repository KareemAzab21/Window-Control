Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    dio.o(.ARM.exidx.text.DIO_Init) refers to dio.o(.text.DIO_Init) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_WritePin) refers to dio.o(.text.DIO_WritePin) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_TogglePin) refers to dio.o(.text.DIO_TogglePin) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.Delay_MS) refers to dio.o(.text.Delay_MS) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_WritePort) refers to dio.o(.text.DIO_WritePort) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_ReadPin) refers to dio.o(.text.DIO_ReadPin) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_ReadPort) refers to dio.o(.text.DIO_ReadPort) for [Anonymous Symbol]
    main.o(.text.Object_Detect) refers to main.o(.bss.Mutex) for Mutex
    main.o(.text.Object_Detect) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.Object_Detect) refers to motor.o(.text.MOTOR_A_STOP) for MOTOR_A_STOP
    main.o(.text.Object_Detect) refers to dio.o(.text.Delay_MS) for Delay_MS
    main.o(.text.Object_Detect) refers to motor.o(.text.MOTOR_A_BACKWARD) for MOTOR_A_BACKWARD
    main.o(.text.Object_Detect) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.Object_Detect) refers to main.o(.text.Object_Detect) for [Anonymous Symbol]
    main.o(.text.Drive_Motor_Forward_AUTO) refers to main.o(.bss.Mutex) for Mutex
    main.o(.text.Drive_Motor_Forward_AUTO) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.Drive_Motor_Forward_AUTO) refers to limit.o(.text.Limit_Pressed) for Limit_Pressed
    main.o(.text.Drive_Motor_Forward_AUTO) refers to button.o(.text.ButtonPressed) for ButtonPressed
    main.o(.text.Drive_Motor_Forward_AUTO) refers to motor.o(.text.MOTOR_A_FORWARD) for MOTOR_A_FORWARD
    main.o(.text.Drive_Motor_Forward_AUTO) refers to motor.o(.text.MOTOR_A_STOP) for MOTOR_A_STOP
    main.o(.text.Drive_Motor_Forward_AUTO) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.Drive_Motor_Forward_AUTO) refers to main.o(.text.Drive_Motor_Forward_AUTO) for [Anonymous Symbol]
    main.o(.text.Drive_Motor_Forward_MANUAL) refers to main.o(.bss.Mutex) for Mutex
    main.o(.text.Drive_Motor_Forward_MANUAL) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.Drive_Motor_Forward_MANUAL) refers to motor.o(.text.MOTOR_A_FORWARD) for MOTOR_A_FORWARD
    main.o(.text.Drive_Motor_Forward_MANUAL) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.Drive_Motor_Forward_MANUAL) refers to main.o(.text.Drive_Motor_Forward_MANUAL) for [Anonymous Symbol]
    main.o(.text.Drive_Motor_Backward_AUTO) refers to main.o(.bss.Mutex) for Mutex
    main.o(.text.Drive_Motor_Backward_AUTO) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.Drive_Motor_Backward_AUTO) refers to limit.o(.text.Limit_Pressed) for Limit_Pressed
    main.o(.text.Drive_Motor_Backward_AUTO) refers to motor.o(.text.MOTOR_A_BACKWARD) for MOTOR_A_BACKWARD
    main.o(.text.Drive_Motor_Backward_AUTO) refers to motor.o(.text.MOTOR_A_STOP) for MOTOR_A_STOP
    main.o(.text.Drive_Motor_Backward_AUTO) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.Drive_Motor_Backward_AUTO) refers to main.o(.text.Drive_Motor_Backward_AUTO) for [Anonymous Symbol]
    main.o(.text.Drive_Motor_Backward_MANUAL) refers to main.o(.bss.Mutex) for Mutex
    main.o(.text.Drive_Motor_Backward_MANUAL) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.Drive_Motor_Backward_MANUAL) refers to motor.o(.text.MOTOR_A_BACKWARD) for MOTOR_A_BACKWARD
    main.o(.text.Drive_Motor_Backward_MANUAL) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.Drive_Motor_Backward_MANUAL) refers to main.o(.text.Drive_Motor_Backward_MANUAL) for [Anonymous Symbol]
    main.o(.text.vReceiverTask) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.vReceiverTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.vReceiverTask) refers to main.o(.bss.xBinarySemaphore) for xBinarySemaphore
    main.o(.text.vReceiverTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vReceiverTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.vReceiverTask) refers to main.o(.text.vReceiverTask) for [Anonymous Symbol]
    main.o(.text.vSenderTask) refers to button.o(.text.ButtonPressed) for ButtonPressed
    main.o(.text.vSenderTask) refers to switch.o(.text.SwitchPressed) for SwitchPressed
    main.o(.text.vSenderTask) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.vSenderTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.vSenderTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vSenderTask) refers to main.o(.bss.xBinarySemaphore) for xBinarySemaphore
    main.o(.text.vSenderTask) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    main.o(.text.vSenderTask) refers to main.o(.text.Drive_Motor_Forward_AUTO) for Drive_Motor_Forward_AUTO
    main.o(.text.vSenderTask) refers to limit.o(.text.Limit_Pressed) for Limit_Pressed
    main.o(.text.vSenderTask) refers to main.o(.text.Object_Detect) for Object_Detect
    main.o(.text.vSenderTask) refers to main.o(.text.Drive_Motor_Forward_MANUAL) for Drive_Motor_Forward_MANUAL
    main.o(.text.vSenderTask) refers to motor.o(.text.MOTOR_A_STOP) for MOTOR_A_STOP
    main.o(.text.vSenderTask) refers to main.o(.text.Drive_Motor_Backward_AUTO) for Drive_Motor_Backward_AUTO
    main.o(.text.vSenderTask) refers to main.o(.text.Drive_Motor_Backward_MANUAL) for Drive_Motor_Backward_MANUAL
    main.o(.ARM.exidx.text.vSenderTask) refers to main.o(.text.vSenderTask) for [Anonymous Symbol]
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.main) refers to main.o(.bss.xBinarySemaphore) for xBinarySemaphore
    main.o(.text.main) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.main) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.Mutex) for Mutex
    main.o(.text.main) refers to motor.o(.text.MOTOR_A_INIT) for MOTOR_A_INIT
    main.o(.text.main) refers to button.o(.text.ButtonInit) for ButtonInit
    main.o(.text.main) refers to switch.o(.text.SwitchInit) for SwitchInit
    main.o(.text.main) refers to limit.o(.text.Limit_Init) for Limit_Init
    main.o(.text.main) refers to main.o(.text.vSenderTask) for vSenderTask
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.vReceiverTask) for vReceiverTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    motor.o(.text.MOTOR_A_INIT) refers to dio.o(.text.DIO_Init) for DIO_Init
    motor.o(.ARM.exidx.text.MOTOR_A_INIT) refers to motor.o(.text.MOTOR_A_INIT) for [Anonymous Symbol]
    motor.o(.text.MOTOR_B_INIT) refers to dio.o(.text.DIO_Init) for DIO_Init
    motor.o(.ARM.exidx.text.MOTOR_B_INIT) refers to motor.o(.text.MOTOR_B_INIT) for [Anonymous Symbol]
    motor.o(.text.MOTOR_A_FORWARD) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motor.o(.ARM.exidx.text.MOTOR_A_FORWARD) refers to motor.o(.text.MOTOR_A_FORWARD) for [Anonymous Symbol]
    motor.o(.text.MOTOR_A_BACKWARD) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motor.o(.ARM.exidx.text.MOTOR_A_BACKWARD) refers to motor.o(.text.MOTOR_A_BACKWARD) for [Anonymous Symbol]
    motor.o(.text.MOTOR_B_FORWARD) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motor.o(.ARM.exidx.text.MOTOR_B_FORWARD) refers to motor.o(.text.MOTOR_B_FORWARD) for [Anonymous Symbol]
    motor.o(.text.MOTOR_B_BACKWARD) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motor.o(.ARM.exidx.text.MOTOR_B_BACKWARD) refers to motor.o(.text.MOTOR_B_BACKWARD) for [Anonymous Symbol]
    motor.o(.text.MOTOR_A_STOP) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motor.o(.ARM.exidx.text.MOTOR_A_STOP) refers to motor.o(.text.MOTOR_A_STOP) for [Anonymous Symbol]
    motor.o(.text.MOTOR_B_STOP) refers to dio.o(.text.DIO_WritePin) for DIO_WritePin
    motor.o(.ARM.exidx.text.MOTOR_B_STOP) refers to motor.o(.text.MOTOR_B_STOP) for [Anonymous Symbol]
    switch.o(.text.SwitchInit) refers to dio.o(.text.DIO_Init) for DIO_Init
    switch.o(.ARM.exidx.text.SwitchInit) refers to switch.o(.text.SwitchInit) for [Anonymous Symbol]
    switch.o(.text.SwitchPressed) refers to dio.o(.text.DIO_ReadPin) for DIO_ReadPin
    switch.o(.ARM.exidx.text.SwitchPressed) refers to switch.o(.text.SwitchPressed) for [Anonymous Symbol]
    button.o(.text.ButtonInit) refers to dio.o(.text.DIO_Init) for DIO_Init
    button.o(.ARM.exidx.text.ButtonInit) refers to button.o(.text.ButtonInit) for [Anonymous Symbol]
    button.o(.text.ButtonPressed) refers to dio.o(.text.DIO_ReadPin) for DIO_ReadPin
    button.o(.ARM.exidx.text.ButtonPressed) refers to button.o(.text.ButtonPressed) for [Anonymous Symbol]
    limit.o(.text.Limit_Init) refers to dio.o(.text.DIO_Init) for DIO_Init
    limit.o(.ARM.exidx.text.Limit_Init) refers to limit.o(.text.Limit_Init) for [Anonymous Symbol]
    limit.o(.text.Limit_Pressed) refers to dio.o(.text.DIO_ReadPin) for DIO_ReadPin
    limit.o(.ARM.exidx.text.Limit_Pressed) refers to limit.o(.text.Limit_Pressed) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.rodata..Lswitch.table.SystemCoreClockUpdate.1) for .Lswitch.table.SystemCoreClockUpdate.1
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.xTaskCreate) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvIdleTask) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvIdleTask) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing dio.o(.text), (0 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_Init), (8 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_WritePin), (8 bytes).
    Removing dio.o(.text.DIO_TogglePin), (194 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_TogglePin), (8 bytes).
    Removing dio.o(.ARM.exidx.text.Delay_MS), (8 bytes).
    Removing dio.o(.text.DIO_WritePort), (136 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_WritePort), (8 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_ReadPin), (8 bytes).
    Removing dio.o(.text.DIO_ReadPort), (134 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_ReadPort), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.Object_Detect), (8 bytes).
    Removing main.o(.ARM.exidx.text.Drive_Motor_Forward_AUTO), (8 bytes).
    Removing main.o(.ARM.exidx.text.Drive_Motor_Forward_MANUAL), (8 bytes).
    Removing main.o(.ARM.exidx.text.Drive_Motor_Backward_AUTO), (8 bytes).
    Removing main.o(.ARM.exidx.text.Drive_Motor_Backward_MANUAL), (8 bytes).
    Removing main.o(.ARM.exidx.text.vReceiverTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vSenderTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing motor.o(.text), (0 bytes).
    Removing motor.o(.ARM.exidx.text.MOTOR_A_INIT), (8 bytes).
    Removing motor.o(.text.MOTOR_B_INIT), (48 bytes).
    Removing motor.o(.ARM.exidx.text.MOTOR_B_INIT), (8 bytes).
    Removing motor.o(.ARM.exidx.text.MOTOR_A_FORWARD), (8 bytes).
    Removing motor.o(.ARM.exidx.text.MOTOR_A_BACKWARD), (8 bytes).
    Removing motor.o(.text.MOTOR_B_FORWARD), (30 bytes).
    Removing motor.o(.ARM.exidx.text.MOTOR_B_FORWARD), (8 bytes).
    Removing motor.o(.text.MOTOR_B_BACKWARD), (30 bytes).
    Removing motor.o(.ARM.exidx.text.MOTOR_B_BACKWARD), (8 bytes).
    Removing motor.o(.ARM.exidx.text.MOTOR_A_STOP), (8 bytes).
    Removing motor.o(.text.MOTOR_B_STOP), (30 bytes).
    Removing motor.o(.ARM.exidx.text.MOTOR_B_STOP), (8 bytes).
    Removing switch.o(.text), (0 bytes).
    Removing switch.o(.ARM.exidx.text.SwitchInit), (8 bytes).
    Removing switch.o(.ARM.exidx.text.SwitchPressed), (8 bytes).
    Removing button.o(.text), (0 bytes).
    Removing button.o(.ARM.exidx.text.ButtonInit), (8 bytes).
    Removing button.o(.ARM.exidx.text.ButtonPressed), (8 bytes).
    Removing limit.o(.text), (0 bytes).
    Removing limit.o(.ARM.exidx.text.Limit_Init), (8 bytes).
    Removing limit.o(.ARM.exidx.text.Limit_Pressed), (8 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (280 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.rodata..Lswitch.table.SystemCoreClockUpdate.1), (92 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (28 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (98 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (16 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (178 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (392 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (282 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (416 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (268 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (152 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (26 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (290 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (246 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (398 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (184 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCount), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (612 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (1178 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (72 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (294 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (142 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (62 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (300 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (394 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (402 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).

230 unused section(s) (total 11100 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    Button.c                                 0x00000000   Number         0  button.o ABSOLUTE
    DIO.c                                    0x00000000   Number         0  dio.o ABSOLUTE
    Limit.c                                  0x00000000   Number         0  limit.o ABSOLUTE
    Motor.c                                  0x00000000   Number         0  motor.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    Switch.c                                 0x00000000   Number         0  switch.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002e0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002e2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x000002e6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x000002e8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002ea   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002ec   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002ec   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002ec   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000002f2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000002f2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000002f6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000002f6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x000002fe   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000300   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000300   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000304   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000030c   Number         0  startup_tm4c123.o(.text)
    .text                                    0x0000030c   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000420   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004aa   Section       16  aeabi_memset4.o(.text)
    .text                                    0x000004ba   Section       68  rt_memclr.o(.text)
    .text                                    0x000004fe   Section        0  heapauxi.o(.text)
    .text                                    0x00000504   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000568   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000005b6   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000600   Section        0  exit.o(.text)
    .text                                    0x00000614   Section        8  libspace.o(.text)
    .text                                    0x0000061c   Section        0  sys_exit.o(.text)
    .text                                    0x00000628   Section        2  use_no_semi.o(.text)
    .text                                    0x0000062a   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x0000062c   Section        0  button.o(.text.ButtonInit)
    [Anonymous Symbol]                       0x00000674   Section        0  button.o(.text.ButtonPressed)
    [Anonymous Symbol]                       0x0000068c   Section        0  dio.o(.text.DIO_Init)
    [Anonymous Symbol]                       0x00000b44   Section        0  dio.o(.text.DIO_ReadPin)
    [Anonymous Symbol]                       0x00000c60   Section        0  dio.o(.text.DIO_WritePin)
    [Anonymous Symbol]                       0x00000e00   Section        0  dio.o(.text.Delay_MS)
    [Anonymous Symbol]                       0x00000e40   Section        0  main.o(.text.Drive_Motor_Backward_AUTO)
    [Anonymous Symbol]                       0x00000e80   Section        0  main.o(.text.Drive_Motor_Backward_MANUAL)
    [Anonymous Symbol]                       0x00000eb0   Section        0  main.o(.text.Drive_Motor_Forward_AUTO)
    [Anonymous Symbol]                       0x00000f14   Section        0  main.o(.text.Drive_Motor_Forward_MANUAL)
    [Anonymous Symbol]                       0x00000f44   Section        0  limit.o(.text.Limit_Init)
    [Anonymous Symbol]                       0x00000f6c   Section        0  limit.o(.text.Limit_Pressed)
    [Anonymous Symbol]                       0x00000f84   Section        0  motor.o(.text.MOTOR_A_BACKWARD)
    [Anonymous Symbol]                       0x00000fa4   Section        0  motor.o(.text.MOTOR_A_FORWARD)
    [Anonymous Symbol]                       0x00000fc4   Section        0  motor.o(.text.MOTOR_A_INIT)
    [Anonymous Symbol]                       0x00000ff4   Section        0  motor.o(.text.MOTOR_A_STOP)
    [Anonymous Symbol]                       0x00001014   Section        0  main.o(.text.Object_Detect)
    [Anonymous Symbol]                       0x00001060   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x000010c0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000010d0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x000010f0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x000010f4   Section        0  switch.o(.text.SwitchInit)
    [Anonymous Symbol]                       0x00001104   Section        0  switch.o(.text.SwitchPressed)
    [Anonymous Symbol]                       0x00001110   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00001140   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000011b0   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x000011f8   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x000012b9   Thumb Code   200  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x000012b8   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvIdleTask                              0x00001381   Thumb Code   322  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00001380   Section        0  tasks.o(.text.prvIdleTask)
    prvNotifyQueueSetContainer               0x000014c5   Thumb Code   204  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x000014c4   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00001591   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00001590   Section        0  port.o(.text.prvPortStartFirstTask)
    prvTaskExitError                         0x000015b9   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x000015b8   Section        0  port.o(.text.prvTaskExitError)
    prvUnlockQueue                           0x000015ed   Thumb Code   136  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x000015ec   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001674   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x000016dc   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x000016f4   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x0000171c   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001740   Section        0  queue.o(.text.uxQueueMessagesWaiting)
    [Anonymous Symbol]                       0x00001768   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x00001774   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x0000178c   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00001794   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x000017d1   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000017d0   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000017e4   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x0000182c   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x0000185c   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00001878   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000018dc   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x000019f0   Section        0  main.o(.text.vReceiverTask)
    [Anonymous Symbol]                       0x00001a40   Section        0  main.o(.text.vSenderTask)
    [Anonymous Symbol]                       0x00001d38   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00001d88   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00001da4   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00001db4   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00001dec   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00001ebc   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00001f50   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00001fe4   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00001ff4   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00001ff4   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x0000207c   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x000021b0   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x000021d8   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00002270   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x000024b4   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x0000265c   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00002828   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x000028d8   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00002adc   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00002b04   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00002cc0   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00002d88   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00002e48   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00002f6c   Section        0  tasks.o(.text.xTaskResumeAll)
    $v0                                      0x000030f0   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x000030f0   Section       26  fpinit.o(x$fpl$fpinit)
    .L.str                                   0x0000310a   Data           8  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000310a   Section        0  main.o(.rodata.str1.1)
    .L.str.1                                 0x00003112   Data           9  main.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    pvPortMalloc.pucAlignedHeap              0x2000006c   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x2000006c   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    __tagsym$$used.1                         0x20000070   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxDelayedTaskList                        0x20000074   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000074   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20000078   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000078   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x2000007c   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x2000007c   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200000e0   Data        9096  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200000e0   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20002468   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20002468   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x2000246c   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x2000246c   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x20002470   Data           1  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x20002470   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x20002474   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x20002474   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20002478   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002478   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x2000247c   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x2000247c   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002480   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002480   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002484   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002484   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002488   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002488   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xDelayedTaskList1                        0x20002490   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002490   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200024a4   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200024a4   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x200024b8   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200024b8   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x200024bc   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x200024bc   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextFreeByte                            0x200024c0   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x200024c0   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x200024c4   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200024c4   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200024c8   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200024c8   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x200024cc   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x200024cc   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200024d0   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200024d0   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x200024e8   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x200024e8   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x200024ec   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x200024ec   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002500   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002500   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002514   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002514   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x20002518   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002518   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002520   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20002520   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20002520   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20002520   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20002720   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002e1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x000002e9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002ed   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002ed   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002ed   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x000002ff   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000305   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0000030d   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000401   Thumb Code     0  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x00000421   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000421   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000487   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x000004ab   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000004ab   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x000004bb   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x000004bb   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x000004bf   Thumb Code    64  rt_memclr.o(.text)
    __use_two_region_memory                  0x000004ff   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000501   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000503   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00000505   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000505   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000505   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0000054d   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x00000569   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x00000569   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x00000569   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x0000056d   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x000005b7   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000601   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000615   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000615   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000615   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0000061d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000629   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000629   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000062b   Thumb Code     0  indicate_semi.o(.text)
    ButtonInit                               0x0000062d   Thumb Code    72  button.o(.text.ButtonInit)
    ButtonPressed                            0x00000675   Thumb Code    22  button.o(.text.ButtonPressed)
    DIO_Init                                 0x0000068d   Thumb Code  1206  dio.o(.text.DIO_Init)
    DIO_ReadPin                              0x00000b45   Thumb Code   284  dio.o(.text.DIO_ReadPin)
    DIO_WritePin                             0x00000c61   Thumb Code   416  dio.o(.text.DIO_WritePin)
    Delay_MS                                 0x00000e01   Thumb Code    64  dio.o(.text.Delay_MS)
    Drive_Motor_Backward_AUTO                0x00000e41   Thumb Code    62  main.o(.text.Drive_Motor_Backward_AUTO)
    Drive_Motor_Backward_MANUAL              0x00000e81   Thumb Code    46  main.o(.text.Drive_Motor_Backward_MANUAL)
    Drive_Motor_Forward_AUTO                 0x00000eb1   Thumb Code    98  main.o(.text.Drive_Motor_Forward_AUTO)
    Drive_Motor_Forward_MANUAL               0x00000f15   Thumb Code    46  main.o(.text.Drive_Motor_Forward_MANUAL)
    Limit_Init                               0x00000f45   Thumb Code    38  limit.o(.text.Limit_Init)
    Limit_Pressed                            0x00000f6d   Thumb Code    22  limit.o(.text.Limit_Pressed)
    MOTOR_A_BACKWARD                         0x00000f85   Thumb Code    30  motor.o(.text.MOTOR_A_BACKWARD)
    MOTOR_A_FORWARD                          0x00000fa5   Thumb Code    30  motor.o(.text.MOTOR_A_FORWARD)
    MOTOR_A_INIT                             0x00000fc5   Thumb Code    48  motor.o(.text.MOTOR_A_INIT)
    MOTOR_A_STOP                             0x00000ff5   Thumb Code    30  motor.o(.text.MOTOR_A_STOP)
    Object_Detect                            0x00001015   Thumb Code    74  main.o(.text.Object_Detect)
    PendSV_Handler                           0x00001061   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x000010d1   Thumb Code    36  port.o(.text.SVC_Handler)
    SwitchInit                               0x000010f5   Thumb Code    16  switch.o(.text.SwitchInit)
    SwitchPressed                            0x00001105   Thumb Code    12  switch.o(.text.SwitchPressed)
    SysTick_Handler                          0x00001111   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x00001141   Thumb Code   112  system_tm4c123.o(.text.SystemInit)
    eTaskConfirmSleepModeStatus              0x000011b1   Thumb Code    72  tasks.o(.text.eTaskConfirmSleepModeStatus)
    main                                     0x000011f9   Thumb Code   192  main.o(.text.main)
    pvPortMalloc                             0x00001675   Thumb Code   104  heap_1.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x000016dd   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x000016f5   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x0000171d   Thumb Code    36  list.o(.text.uxListRemove)
    uxQueueMessagesWaiting                   0x00001741   Thumb Code    38  queue.o(.text.uxQueueMessagesWaiting)
    uxTaskGetNumberOfTasks                   0x00001769   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vListInitialise                          0x00001775   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x0000178d   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00001795   Thumb Code    58  list.o(.text.vListInsert)
    vPortEnterCritical                       0x000017e5   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x0000182d   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x0000185d   Thumb Code    26  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00001879   Thumb Code   100  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x000018dd   Thumb Code   276  port.o(.text.vPortSuppressTicksAndSleep)
    vReceiverTask                            0x000019f1   Thumb Code    78  main.o(.text.vReceiverTask)
    vSenderTask                              0x00001a41   Thumb Code   758  main.o(.text.vSenderTask)
    vTaskDelay                               0x00001d39   Thumb Code    80  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00001d89   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00001da5   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00001db5   Thumb Code    54  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPriorityDisinheritAfterTimeout      0x00001ded   Thumb Code   206  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00001ebd   Thumb Code   140  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x00001f51   Thumb Code   146  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x00001fe5   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00001ff5   Thumb Code   134  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x0000207d   Thumb Code   306  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x000021b1   Thumb Code    40  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x000021d9   Thumb Code   150  queue.o(.text.xQueueGenericCreate)
    xQueueGenericSend                        0x00002271   Thumb Code   580  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x000024b5   Thumb Code   424  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x0000265d   Thumb Code   458  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00002829   Thumb Code   176  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x000028d9   Thumb Code   516  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00002add   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskIncrementTick                       0x00002b05   Thumb Code   442  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002cc1   Thumb Code   198  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00002d89   Thumb Code   190  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00002e49   Thumb Code   292  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00002f6d   Thumb Code   388  tasks.o(.text.xTaskResumeAll)
    _fp_init                                 0x000030f1   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00003109   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00003109   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    uxTopUsedPriority                        0x0000311c   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00003120   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003140   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    Mutex                                    0x20000068   Data           4  main.o(.bss.Mutex)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x20000070   Data           4  tasks.o(.bss.pxCurrentTCB)
    xBinarySemaphore                         0x2000248c   Data           4  main.o(.bss.xBinarySemaphore)
    xQueue                                   0x200024e4   Data           4  main.o(.bss.xQueue)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000030d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00003148, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00003140, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          108    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO          437  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO          606    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO          608    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO          610    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000002   Code   RO          468    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002e2   0x000002e2   0x00000004   Code   RO          474    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          477    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          479    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          482    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          484    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          486    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          489    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          491    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          493    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          495    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          497    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          499    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          501    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          503    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          505    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          507    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          509    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          513    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          515    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          517    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          519    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000002   Code   RO          520    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x000002e8   0x000002e8   0x00000002   Code   RO          542    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          557    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          559    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          562    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          565    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          567    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          570    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000002   Code   RO          571    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO          439    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO          445    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002ec   0x000002ec   0x00000006   Code   RO          457    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x000002f2   0x000002f2   0x00000000   Code   RO          447    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x000002f2   0x000002f2   0x00000004   Code   RO          448    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          450    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000008   Code   RO          451    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x000002fe   0x000002fe   0x00000002   Code   RO          472    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000300   0x00000300   0x00000000   Code   RO          522    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000300   0x00000300   0x00000004   Code   RO          523    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000304   0x00000304   0x00000006   Code   RO          524    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000030a   0x0000030a   0x00000002   PAD
    0x0000030c   0x0000030c   0x00000114   Code   RO          109  * .text               startup_tm4c123.o
    0x00000420   0x00000420   0x0000008a   Code   RO          429    .text               c_w.l(rt_memcpy_v6.o)
    0x000004aa   0x000004aa   0x00000010   Code   RO          431    .text               c_w.l(aeabi_memset4.o)
    0x000004ba   0x000004ba   0x00000044   Code   RO          433    .text               c_w.l(rt_memclr.o)
    0x000004fe   0x000004fe   0x00000006   Code   RO          435    .text               c_w.l(heapauxi.o)
    0x00000504   0x00000504   0x00000064   Code   RO          440    .text               c_w.l(rt_memcpy_w.o)
    0x00000568   0x00000568   0x0000004e   Code   RO          442    .text               c_w.l(rt_memclr_w.o)
    0x000005b6   0x000005b6   0x0000004a   Code   RO          459    .text               c_w.l(sys_stackheap_outer.o)
    0x00000600   0x00000600   0x00000012   Code   RO          461    .text               c_w.l(exit.o)
    0x00000612   0x00000612   0x00000002   PAD
    0x00000614   0x00000614   0x00000008   Code   RO          469    .text               c_w.l(libspace.o)
    0x0000061c   0x0000061c   0x0000000c   Code   RO          532    .text               c_w.l(sys_exit.o)
    0x00000628   0x00000628   0x00000002   Code   RO          547    .text               c_w.l(use_no_semi.o)
    0x0000062a   0x0000062a   0x00000000   Code   RO          549    .text               c_w.l(indicate_semi.o)
    0x0000062a   0x0000062a   0x00000002   PAD
    0x0000062c   0x0000062c   0x00000048   Code   RO           85    .text.ButtonInit    button.o
    0x00000674   0x00000674   0x00000016   Code   RO           87    .text.ButtonPressed  button.o
    0x0000068a   0x0000068a   0x00000002   PAD
    0x0000068c   0x0000068c   0x000004b6   Code   RO            2    .text.DIO_Init      dio.o
    0x00000b42   0x00000b42   0x00000002   PAD
    0x00000b44   0x00000b44   0x0000011c   Code   RO           12    .text.DIO_ReadPin   dio.o
    0x00000c60   0x00000c60   0x000001a0   Code   RO            4    .text.DIO_WritePin  dio.o
    0x00000e00   0x00000e00   0x00000040   Code   RO            8    .text.Delay_MS      dio.o
    0x00000e40   0x00000e40   0x0000003e   Code   RO           29    .text.Drive_Motor_Backward_AUTO  main.o
    0x00000e7e   0x00000e7e   0x00000002   PAD
    0x00000e80   0x00000e80   0x0000002e   Code   RO           31    .text.Drive_Motor_Backward_MANUAL  main.o
    0x00000eae   0x00000eae   0x00000002   PAD
    0x00000eb0   0x00000eb0   0x00000062   Code   RO           25    .text.Drive_Motor_Forward_AUTO  main.o
    0x00000f12   0x00000f12   0x00000002   PAD
    0x00000f14   0x00000f14   0x0000002e   Code   RO           27    .text.Drive_Motor_Forward_MANUAL  main.o
    0x00000f42   0x00000f42   0x00000002   PAD
    0x00000f44   0x00000f44   0x00000026   Code   RO           96    .text.Limit_Init    limit.o
    0x00000f6a   0x00000f6a   0x00000002   PAD
    0x00000f6c   0x00000f6c   0x00000016   Code   RO           98    .text.Limit_Pressed  limit.o
    0x00000f82   0x00000f82   0x00000002   PAD
    0x00000f84   0x00000f84   0x0000001e   Code   RO           57    .text.MOTOR_A_BACKWARD  motor.o
    0x00000fa2   0x00000fa2   0x00000002   PAD
    0x00000fa4   0x00000fa4   0x0000001e   Code   RO           55    .text.MOTOR_A_FORWARD  motor.o
    0x00000fc2   0x00000fc2   0x00000002   PAD
    0x00000fc4   0x00000fc4   0x00000030   Code   RO           51    .text.MOTOR_A_INIT  motor.o
    0x00000ff4   0x00000ff4   0x0000001e   Code   RO           63    .text.MOTOR_A_STOP  motor.o
    0x00001012   0x00001012   0x00000002   PAD
    0x00001014   0x00001014   0x0000004a   Code   RO           23    .text.Object_Detect  main.o
    0x0000105e   0x0000105e   0x00000002   PAD
    0x00001060   0x00001060   0x00000064   Code   RO          169    .text.PendSV_Handler  port.o
    0x000010c4   0x000010c4   0x0000000c   PAD
    0x000010d0   0x000010d0   0x00000024   Code   RO          153    .text.SVC_Handler   port.o
    0x000010f4   0x000010f4   0x00000010   Code   RO           74    .text.SwitchInit    switch.o
    0x00001104   0x00001104   0x0000000c   Code   RO           76    .text.SwitchPressed  switch.o
    0x00001110   0x00001110   0x0000002e   Code   RO          171    .text.SysTick_Handler  port.o
    0x0000113e   0x0000113e   0x00000002   PAD
    0x00001140   0x00001140   0x00000070   Code   RO          118    .text.SystemInit    system_tm4c123.o
    0x000011b0   0x000011b0   0x00000048   Code   RO          360    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x000011f8   0x000011f8   0x000000c0   Code   RO           37    .text.main          main.o
    0x000012b8   0x000012b8   0x000000c8   Code   RO          290    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001380   0x00001380   0x00000142   Code   RO          314    .text.prvIdleTask   tasks.o
    0x000014c2   0x000014c2   0x00000002   PAD
    0x000014c4   0x000014c4   0x000000cc   Code   RO          230    .text.prvNotifyQueueSetContainer  queue.o
    0x00001590   0x00001590   0x00000028   Code   RO          161    .text.prvPortStartFirstTask  port.o
    0x000015b8   0x000015b8   0x00000032   Code   RO          151    .text.prvTaskExitError  port.o
    0x000015ea   0x000015ea   0x00000002   PAD
    0x000015ec   0x000015ec   0x00000088   Code   RO          232    .text.prvUnlockQueue  queue.o
    0x00001674   0x00001674   0x00000068   Code   RO          191    .text.pvPortMalloc  heap_1.o
    0x000016dc   0x000016dc   0x00000018   Code   RO          380    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x000016f4   0x000016f4   0x00000028   Code   RO          149    .text.pxPortInitialiseStack  port.o
    0x0000171c   0x0000171c   0x00000024   Code   RO          139    .text.uxListRemove  list.o
    0x00001740   0x00001740   0x00000026   Code   RO          246    .text.uxQueueMessagesWaiting  queue.o
    0x00001766   0x00001766   0x00000002   PAD
    0x00001768   0x00001768   0x0000000c   Code   RO          324    .text.uxTaskGetNumberOfTasks  tasks.o
    0x00001774   0x00001774   0x00000016   Code   RO          131    .text.vListInitialise  list.o
    0x0000178a   0x0000178a   0x00000002   PAD
    0x0000178c   0x0000178c   0x00000006   Code   RO          133    .text.vListInitialiseItem  list.o
    0x00001792   0x00001792   0x00000002   PAD
    0x00001794   0x00001794   0x0000003a   Code   RO          137    .text.vListInsert   list.o
    0x000017ce   0x000017ce   0x00000002   PAD
    0x000017d0   0x000017d0   0x00000014   Code   RO          159    .text.vPortEnableVFP  port.o
    0x000017e4   0x000017e4   0x00000046   Code   RO          165    .text.vPortEnterCritical  port.o
    0x0000182a   0x0000182a   0x00000002   PAD
    0x0000182c   0x0000182c   0x0000002e   Code   RO          167    .text.vPortExitCritical  port.o
    0x0000185a   0x0000185a   0x00000002   PAD
    0x0000185c   0x0000185c   0x0000001a   Code   RO          193    .text.vPortFree     heap_1.o
    0x00001876   0x00001876   0x00000002   PAD
    0x00001878   0x00001878   0x00000064   Code   RO          157    .text.vPortSetupTimerInterrupt  port.o
    0x000018dc   0x000018dc   0x00000114   Code   RO          173    .text.vPortSuppressTicksAndSleep  port.o
    0x000019f0   0x000019f0   0x0000004e   Code   RO           33    .text.vReceiverTask  main.o
    0x00001a3e   0x00001a3e   0x00000002   PAD
    0x00001a40   0x00001a40   0x000002f6   Code   RO           35    .text.vSenderTask   main.o
    0x00001d36   0x00001d36   0x00000002   PAD
    0x00001d38   0x00001d38   0x00000050   Code   RO          294    .text.vTaskDelay    tasks.o
    0x00001d88   0x00001d88   0x0000001a   Code   RO          350    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00001da2   0x00001da2   0x00000002   PAD
    0x00001da4   0x00001da4   0x0000000e   Code   RO          354    .text.vTaskMissedYield  tasks.o
    0x00001db2   0x00001db2   0x00000002   PAD
    0x00001db4   0x00001db4   0x00000036   Code   RO          340    .text.vTaskPlaceOnEventList  tasks.o
    0x00001dea   0x00001dea   0x00000002   PAD
    0x00001dec   0x00001dec   0x000000ce   Code   RO          376    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00001eba   0x00001eba   0x00000002   PAD
    0x00001ebc   0x00001ebc   0x00000094   Code   RO          312    .text.vTaskStartScheduler  tasks.o
    0x00001f50   0x00001f50   0x00000092   Code   RO          334    .text.vTaskStepTick  tasks.o
    0x00001fe2   0x00001fe2   0x00000002   PAD
    0x00001fe4   0x00001fe4   0x00000010   Code   RO          288    .text.vTaskSuspendAll  tasks.o
    0x00001ff4   0x00001ff4   0x00000086   Code   RO          306    .text.vTaskSwitchContext  tasks.o
    0x0000207a   0x0000207a   0x00000002   PAD
    0x0000207c   0x0000207c   0x00000132   Code   RO          155    .text.xPortStartScheduler  port.o
    0x000021ae   0x000021ae   0x00000002   PAD
    0x000021b0   0x000021b0   0x00000028   Code   RO          214    .text.xQueueCreateMutex  queue.o
    0x000021d8   0x000021d8   0x00000096   Code   RO          212    .text.xQueueGenericCreate  queue.o
    0x0000226e   0x0000226e   0x00000002   PAD
    0x00002270   0x00002270   0x00000244   Code   RO          222    .text.xQueueGenericSend  queue.o
    0x000024b4   0x000024b4   0x000001a8   Code   RO          238    .text.xQueueReceive  queue.o
    0x0000265c   0x0000265c   0x000001ca   Code   RO          226    .text.xQueueSemaphoreTake  queue.o
    0x00002826   0x00002826   0x00000002   PAD
    0x00002828   0x00002828   0x000000b0   Code   RO          352    .text.xTaskCheckForTimeOut  tasks.o
    0x000028d8   0x000028d8   0x00000204   Code   RO          282    .text.xTaskCreate   tasks.o
    0x00002adc   0x00002adc   0x00000026   Code   RO          370    .text.xTaskGetSchedulerState  tasks.o
    0x00002b02   0x00002b02   0x00000002   PAD
    0x00002b04   0x00002b04   0x000001ba   Code   RO          318    .text.xTaskIncrementTick  tasks.o
    0x00002cbe   0x00002cbe   0x00000002   PAD
    0x00002cc0   0x00002cc0   0x000000c6   Code   RO          374    .text.xTaskPriorityDisinherit  tasks.o
    0x00002d86   0x00002d86   0x00000002   PAD
    0x00002d88   0x00002d88   0x000000be   Code   RO          372    .text.xTaskPriorityInherit  tasks.o
    0x00002e46   0x00002e46   0x00000002   PAD
    0x00002e48   0x00002e48   0x00000124   Code   RO          344    .text.xTaskRemoveFromEventList  tasks.o
    0x00002f6c   0x00002f6c   0x00000184   Code   RO          292    .text.xTaskResumeAll  tasks.o
    0x000030f0   0x000030f0   0x0000001a   Code   RO          530    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0000310a   0x0000310a   0x00000011   Data   RO           42    .rodata.str1.1      main.o
    0x0000311b   0x0000311b   0x00000001   PAD
    0x0000311c   0x0000311c   0x00000004   Data   RO          397    .rodata.uxTopUsedPriority  tasks.o
    0x00003120   0x00003120   0x00000020   Data   RO          605    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00003140, Size: 0x00000008, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00003140   0x00000004   Data   RW          120    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x00003144   0x00000004   Data   RW          179    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000008, Load base: 0x00003148, Size: 0x00002718, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000008        -       0x00000060   Zero   RW          470    .bss                c_w.l(libspace.o)
    0x20000068        -       0x00000004   Zero   RW           39    .bss.Mutex          main.o
    0x2000006c        -       0x00000004   Zero   RW          199    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x20000070        -       0x00000004   Zero   RW          396    .bss.pxCurrentTCB   tasks.o
    0x20000074        -       0x00000004   Zero   RW          407    .bss.pxDelayedTaskList  tasks.o
    0x20000078        -       0x00000004   Zero   RW          408    .bss.pxOverflowDelayedTaskList  tasks.o
    0x2000007c        -       0x00000064   Zero   RW          398    .bss.pxReadyTasksLists  tasks.o
    0x200000e0        -       0x00002388   Zero   RW          200    .bss.ucHeap         heap_1.o
    0x20002468        -       0x00000001   Zero   RW          177    .bss.ucMaxSysCallPriority  port.o
    0x20002469   0x00003148   0x00000003   PAD
    0x2000246c        -       0x00000004   Zero   RW          178    .bss.ulMaxPRIGROUPValue  port.o
    0x20002470        -       0x00000001   Zero   RW          182    .bss.ulStoppedTimerCompensation  port.o
    0x20002471   0x00003148   0x00000003   PAD
    0x20002474        -       0x00000004   Zero   RW          181    .bss.ulTimerCountsForOneTick  port.o
    0x20002478        -       0x00000004   Zero   RW          403    .bss.uxCurrentNumberOfTasks  tasks.o
    0x2000247c        -       0x00000004   Zero   RW          402    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002480        -       0x00000004   Zero   RW          405    .bss.uxSchedulerSuspended  tasks.o
    0x20002484        -       0x00000004   Zero   RW          400    .bss.uxTaskNumber   tasks.o
    0x20002488        -       0x00000004   Zero   RW          399    .bss.uxTopReadyPriority  tasks.o
    0x2000248c        -       0x00000004   Zero   RW           41    .bss.xBinarySemaphore  main.o
    0x20002490        -       0x00000014   Zero   RW          416    .bss.xDelayedTaskList1  tasks.o
    0x200024a4        -       0x00000014   Zero   RW          417    .bss.xDelayedTaskList2  tasks.o
    0x200024b8        -       0x00000004   Zero   RW          412    .bss.xIdleTaskHandle  tasks.o
    0x200024bc        -       0x00000004   Zero   RW          180    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x200024c0        -       0x00000004   Zero   RW          201    .bss.xNextFreeByte  heap_1.o
    0x200024c4        -       0x00000004   Zero   RW          413    .bss.xNextTaskUnblockTime  tasks.o
    0x200024c8        -       0x00000004   Zero   RW          415    .bss.xNumOfOverflows  tasks.o
    0x200024cc        -       0x00000004   Zero   RW          414    .bss.xPendedTicks   tasks.o
    0x200024d0        -       0x00000014   Zero   RW          411    .bss.xPendingReadyList  tasks.o
    0x200024e4        -       0x00000004   Zero   RW           40    .bss.xQueue         main.o
    0x200024e8        -       0x00000004   Zero   RW          404    .bss.xSchedulerRunning  tasks.o
    0x200024ec        -       0x00000014   Zero   RW          409    .bss.xSuspendedTaskList  tasks.o
    0x20002500        -       0x00000014   Zero   RW          401    .bss.xTasksWaitingTermination  tasks.o
    0x20002514        -       0x00000004   Zero   RW          406    .bss.xTickCount     tasks.o
    0x20002518        -       0x00000004   Zero   RW          410    .bss.xYieldPending  tasks.o
    0x2000251c   0x00003148   0x00000004   PAD
    0x20002520        -       0x00000000   Zero   RW          107    HEAP                startup_tm4c123.o
    0x20002520        -       0x00000200   Zero   RW          106    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        94          0          0          0          0        683   button.o
      1970         24          0          0          0       2558   dio.o
       130          0          0          0       9104       1837   heap_1.o
        60          0          0          0          0        675   limit.o
       122          0          0          0          0       2332   list.o
      1354          0         17          0         12       2810   main.o
       138          0          0          0          0       1161   motor.o
      1130         16          0          4         14       5319   port.o
      2030          0          0          0          0      24024   queue.o
       276         24        620          0        512       5464   startup_tm4c123.o
        28          0          0          0          0        625   switch.o
       112          0          0          4          0       6442   system_tm4c123.o
      3694          8          4          0        260      41721   tasks.o

    ----------------------------------------------------------------------
     11224         84        674          8       9912      95651   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        86         12          1          0         10          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       710         16          0          0         96       1064   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       676         16          0          0         96        948   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       710         16          0          0         96       1064   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11934        100        674          8      10008      96079   Grand Totals
     11934        100        674          8      10008      96079   ELF Image Totals
     11934        100        674          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                12608 (  12.31kB)
    Total RW  Size (RW Data + ZI Data)             10016 (   9.78kB)
    Total ROM Size (Code + RO Data + RW Data)      12616 (  12.32kB)

==============================================================================

